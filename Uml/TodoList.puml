@startuml
class ItemListManager{
- application : ToDoListApp
+ sortTasks()
+ delete()
+ add()
+ setTableEditable()
+ displayUncompletedTasks()
+ displayCompletedTasks()
+ save()
+ new()
+ close()
+ open()
}

class ItemListController {
    
- final ItemListManager itemListManager = new ItemListManager():
- dueDate: String
- itemsData = : ObservableList<Item>
- dataIncomplete = : ObservableList<Item>
- dataComplete = : ObservableList<Item>
- clickCount : int
- itemTableView : TableView<Item>
-  menuBar : MenuBar
-  openMenu : MenuItem
-  dueDatePicker : DatePicker
-  showCompleteItemsMenu : MenuItem
-  showIncompleteItemsMenu : MenuItem
-  saveItemsMenu : MenuItem
-  Items : TableColumn
-  dueDatePreview:TextField
-  statusColumn : TableColumn
-  descriptionColumn : TableColumn
-  dueDateColumn : TableColumn
-  dueDatePreviewPicker : DatePicker
-  previewDescription : TextArea
-  descriptionTextArea : TextArea
-  itemNameTextField : TextField
+ void initialize()        
- openMenuClicked()
- closeMenuClicked()
- showCompleteMenuClicked()
- showIncompleteMenuClicked()
- showAllItemsMenuClicked()
- saveItemsClicked()
- deleteItemClicked()
- clearClicked()
- dueDateSelectClicked()
- mouseClicked()
- keyBordPressedDescription()
- descriptionPreviewMouseClicked( )
- datePickerPreviewClicked()
- datePickerPreviewKey()






}

class Item{
    -  itemName : SimpleStringProperty
    -  description : SimpleStringProperty
    -  datePattern :String
    -  dueDate: SimpleDateFormat
    -  status : SimpleStringProperty
    + TaskItem()
    + getItemName()
    + setItemName(String itemName)
    + public String getDescription()
    + setDescription(String description)
    + getDueDate()
    + getStatus()
    + setStatus()

}

class ItemListApp{
    main()
    start()
}

javafx.Application <|-- ItemListApp
ItemListApp-ItemListController
ItemListController - Item
ItemListController *-- ItemListManager

@enduml